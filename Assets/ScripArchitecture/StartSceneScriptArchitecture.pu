@startuml StartSceneScriptArchitecture
namespace GameStartScene{
    namespace View{
        abstract class UIViewTemplate{
            +void clicked()
        }
        abstract class UISliderViewTemplate{
            +void setVolume()
        }
        class GameStartingView{
        }
        class GameLoadingButtonView{
        }
        class GameOptionView{
        }
        class GameLoadingView{
        }
        class BGMSliderView{
        }
        class SESliderView{
        }
        class GameEndView{
        }
        GameStartingView .down.> UIViewTemplate
        GameLoadingButtonView .down.> UIViewTemplate
        GameLoadingView .down.> UIViewTemplate
        GameOptionView .down.> UIViewTemplate
        GameEndView .down.> UIViewTemplate
        BGMSliderView .down.> UISliderViewTemplate
        SESliderView .down.> UISliderViewTemplate
    }
    namespace Presenter{
        class GameStartingPresenter{
            -GameStartingView view
            -GameStartingModel model
            +subscribe()
            -onClicked()
        }
        class GameLoadingButtonPresenter{
            -GameLoadingButtonView view
            -GameLoadingModel model
            +subscribe()
            -onClicked()
        }
        class GameLoadingPresenter{
            -GameLoadingView view
            -GameLoadingModel model
            +subscribe()
            -onClicked()
        }
        class GameOptionPresenter{
            -GameOptionView view
            -GameOptionModel model
            +subscribe()
            -onClicked()
        }
        class GameEndPresenter{
            -GameEndView view
            -GameEndModel model
            +subscribe()
            -onClicked()
        }
    }
    namespace Model{
        class GameStartingModel{
            -SaveDataController saveDataController
            -startGame()
            -createSaveData()
            -goToMovie()
        }
        class GameLoadingButtonModel{
            GameObject loadWindow
            +openLoadSaveDatas()
            +closeLoadSaveDatas()
        }
        class GameLoadingModel{
            -SaveDataController saveDataController
            +loadGame()
            -loadSaveData()
            -goToMap()
        }
        class GameOptionModel{
            -GameObject option
            +openOption()
            +closeOption()
        }
        class GameEndModel{
            +endGame()
        }
    }
    class SaveDataController{
        //未実装なので追って追加するかも
        +create()
        +load()
    }
    static class Option{
        +int bgmVolume
        +int SEVolume
        +void setBGMVolume()
        +void setSEVolume()
    }
    interface ISabWindowControllerable{
        +void openWindow()
        +void closeWindow()
    }
    GameStartingModel -up-> SaveDataController
    GameLoadingModel -up-> SaveDataController
    GameStartingPresenter -up-> GameStartingModel
    GameStartingPresenter -down-> GameStartingView
    GameLoadingButtonPresenter -up-> GameLoadingButtonModel
    GameLoadingButtonPresenter -down-> GameLoadingButtonView
    GameLoadingPresenter -up-> GameLoadingModel
    GameLoadingPresenter -down-> GameLoadingView
    GameOptionPresenter -up-> GameOptionModel
    GameOptionPresenter -down-> GameOptionView
    GameEndPresenter -up-> GameEndModel
    GameEndPresenter -down-> GameEndView
    SESliderView -up-> Option
    BGMSliderView -up-> Option
    GameOptionModel -up-> ISabWindowControllerable
    GameLoadingButtonModel -up-> ISabWindowControllerable
}


@enduml